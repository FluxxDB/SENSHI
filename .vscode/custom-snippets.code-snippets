{
    "class": {
        "prefix": [
            "class"
        ],
        "body": [
            "local ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g} = {}",
            "${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}.__index = ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}",
            "",
            "function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}.new()",
            "\tlocal self = setmetatable({$1}, ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g})",
            "\treturn self",
            "end",
            "",
            "function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}:Destroy()",
            "\t",
            "end",
            "",
            "return ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}",
            ""
        ],
        "description": "Lua Class"
    },
    "controller/service": {
        "prefix": [
            "controller",
            "service"
        ],
        "body": [
            "local ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} = {$1}",
            "",
            "function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}:onInit()",
            "end",
            "",
            "function ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}:onStart()",
            "end",
            "",
            "return ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}"
        ],
        "description": "Basic Template"
    },
    "struct": {
        "prefix": "struct",
        "body": [
          "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
          "",
          "local BaseStruct = require(ReplicatedStorage.Shared.class.BaseStruct)",
          "local BitBuffer = require(ReplicatedStorage.Vendor.BitBuffer)",
          "",
          "export type T${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g} = {",
          "",
          "}",
          "",
          "export type ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Struct = BaseStruct.BaseStruct<T${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}>",
          "local ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}: ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}Struct = BaseStruct.new()",
          "",
          "function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}:serialize(id: string, struct: T${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}?)",
          "\tlocal data = struct or ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}:getById(id)",
          "\tlocal buffer = BitBuffer()",
          "",
          "\treturn buffer.dumpString()",
          "end",
          "",
          "function ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}:deserialize(stream: string)",
          "\tlocal buffer = BitBuffer(stream)",
          "",
          "\tlocal ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}Id = buffer:readUInt32()",
          "",
          "\tlocal data = {",
          "",
          "\t}",
          "",
          "\treturn ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}Id, data",
          "end",
          "",
          "return ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}",
          ""
        ],
        "description": "struct"
      }
}
